.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Seed::Response 3pm"
.TH Seed::Response 3pm "2019-01-22" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Seed::Response \- A SAC Response File Parser
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
Seed::Response is a parser for Seed Response files.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "\fInew()\fP"
.IX Subsection "new()"
Create a new Seed::Response object.
.SS "parseFile($self,$file)"
.IX Subsection "parseFile($self,$file)"
Parse the response file \f(CW$file\fR.
.SS "setStation($self,$name)"
.IX Subsection "setStation($self,$name)"
Set the station name to \f(CW$name\fR.
.SS "setNetwork($self,$net)"
.IX Subsection "setNetwork($self,$net)"
Set the network name to \f(CW$net\fR.
.SS "setLocation($self,$loc)"
.IX Subsection "setLocation($self,$loc)"
Set the location to \f(CW$loc\fR.
.SS "setChannel($self,$channel)"
.IX Subsection "setChannel($self,$channel)"
Set the channel to \f(CW$channel\fR.
.SS "setStartDate($self,$date)"
.IX Subsection "setStartDate($self,$date)"
Set the start date to \f(CW$start\fR.
.SS "setEndDate($self,$date)"
.IX Subsection "setEndDate($self,$date)"
Set the end date to \f(CW$start\fR.
.SS "addStage($self,$stage)"
.IX Subsection "addStage($self,$stage)"
Add a new Seed::Reponse::Stage object for stage number \f(CW$stage\fR.
.SS "getStage($self,$stage)"
.IX Subsection "getStage($self,$stage)"
Return the Seed::Response::Stage object for stage number \f(CW$stage\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Walter Szeliga, \f(CW\*(C`<szeliga at colorado.edu>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-seed\-response at rt.cpan.org\*(C'\fR, or through
the web interface at <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Seed\-Response>.  I will be notified, and then you'll
automatically be notified of progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Seed::Response
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT: CPAN\s0's request tracker
.Sp
<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Seed\-Response>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
<http://annocpan.org/dist/Seed\-Response>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
<http://cpanratings.perl.org/d/Seed\-Response>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
<http://search.cpan.org/dist/Seed\-Response/>
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009 Walter Szeliga, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
